{"version":3,"sources":["components/task1/profile/profile.module.css","components/task2/statistics/statistics.module.css","components/task3/friendList/friendList.module.css","components/task4/transactionHistory/TransactionHistory.module.css","components/task1/profileStats/Stats.js","components/task1/profile/Profile.js","components/task2/statistics/Statistics.js","components/task2/statsRender/StatsRender.js","components/task3/friendListItem/FriendListItem.js","components/task3/friendList/FriendList.js","components/task4/transactions/Transactions.js","components/task4/transactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["module","exports","Stats","stats","Object","entries","map","stat","key","className","styles","statsItem","label","quantity","Profile","name","avatar","tag","location","profile","description","src","alt","Statistics","title","children","statistics","getRandomColor","r","Math","floor","random","defaultProps","StatsRender","statList","id","item","style","backgroundColor","percentage","FriendListItem","friends","friend","isOnline","statusOnline","statusOffline","width","FriendList","friendList","Transactions","items","type","amount","currency","TransactionHistory","transactionHistory","head","propTypes","PropTypes","arrayOf","shape","string","isRequired","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wEACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,KAAO,sBAAsB,IAAM,qBAAqB,SAAW,0BAA0B,MAAQ,uBAAuB,UAAY,2BAA2B,MAAQ,uBAAuB,SAAW,4B,gBCA9UD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,0BAA0B,SAAW,6BAA6B,KAAO,yBAAyB,MAAQ,0BAA0B,WAAa,iC,gBCAvND,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,KAAO,yBAAyB,aAAe,wDAAwD,cAAgB,yDAAyD,OAAS,6B,iBCAvRD,EAAOC,QAAU,CAAC,mBAAqB,+CAA+C,KAAO,mC,6tGCgB9EC,EAbD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OACE,oCACGC,OAAOC,QAAQF,GAAOG,KAAI,SAAAC,GAAI,OAC7B,wBAAIC,IAAKD,EAAK,GAAIE,UAAWC,IAAOC,WAClC,uBAAGF,UAAWC,IAAOE,OAAQL,EAAK,IAClC,uBAAGE,UAAWC,IAAOG,UAAWN,EAAK,UCWhCO,MAhBf,YAA0D,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,SAAUf,EAAS,EAATA,MAC9C,OACE,yBAAKM,UAAWC,IAAOS,SACrB,yBAAKV,UAAWC,IAAOU,aACrB,yBAAKC,IAAKL,EAAQM,IAAI,aAAab,UAAWC,IAAOM,SACrD,uBAAGP,UAAWC,IAAOK,MAAOA,GAC5B,uBAAGN,UAAWC,IAAOO,KAArB,IAA4BA,GAC5B,uBAAGR,UAAWC,IAAOQ,UAAWA,IAElC,wBAAIT,UAAWC,IAAOP,OACpB,kBAAC,EAAD,CAAOA,MAAOA,O,uBCXP,SAASoB,EAAT,GAA0C,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC1C,OACE,6BAAShB,UAAWC,IAAOgB,YACxBF,EAAQ,wBAAIf,UAAWC,IAAOc,OAAQA,GAAc,KACpDC,GCJP,SAASE,IACP,IAAIC,EAAI,WACN,OAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,WAEzB,MAAO,OAASH,IAAM,IAAMA,IAAM,IAAMA,IAAM,IDShDL,EAAWS,aAAe,CACxBR,MAAO,kBCPT,IAiBeS,EAjBK,SAAC,GAAe,IAAb9B,EAAY,EAAZA,MACrB,OACE,wBAAIM,UAAWC,IAAOwB,UACnB/B,EAAMG,KAAI,SAAAC,GAAI,OACb,wBACEC,IAAKD,EAAK4B,GACV1B,UAAWC,IAAO0B,KAClBC,MAAO,CAAEC,gBAAiBX,MAE1B,0BAAMlB,UAAWC,IAAOE,OAAQL,EAAKK,OACrC,0BAAMH,UAAWC,IAAO6B,YAAahC,EAAKgC,WAA1C,W,uBCOKC,EAxBQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACxB,OACE,oCACGA,EAAQnC,KAAI,SAAAoC,GAAM,OACjB,wBAAIlC,IAAKkC,EAAOP,GAAI1B,UAAWC,IAAO0B,MACpC,0BACE3B,UACEiC,EAAOC,SAAWjC,IAAOkC,aAAelC,IAAOmC,gBAInD,yBACEpC,UAAWC,IAAOM,OAClBK,IAAKqB,EAAO1B,OACZM,IAAI,eACJwB,MAAM,OAER,uBAAGrC,UAAWC,IAAOK,MAAO2B,EAAO3B,YCR9BgC,EARI,SAAC,GAAiB,IAAfN,EAAc,EAAdA,QACpB,OACE,wBAAIhC,UAAWC,IAAOsC,YACpB,kBAAC,EAAD,CAAgBP,QAASA,M,wBCShBQ,EAdM,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtB,OACE,oCACGA,EAAM5C,KAAI,SAAA8B,GAAI,OACb,wBAAI5B,IAAK4B,EAAKD,IACZ,4BAAKC,EAAKe,MACV,4BAAKf,EAAKgB,QACV,4BAAKhB,EAAKiB,gB,gBCaLC,EAlBY,SAAC,GAAe,IAAbJ,EAAY,EAAZA,MAC5B,OACE,2BAAOzC,UAAWC,IAAO6C,oBACvB,2BAAO9C,UAAWC,IAAO8C,MACvB,4BACE,oCACA,sCACA,0CAIJ,+BACE,kBAAC,EAAD,CAAcN,MAAOA,OAQ7BD,EAAaQ,UAAY,CACvBP,MAAOQ,IAAUC,QACfD,IAAUE,MAAM,CACdzB,GAAIuB,IAAUG,OAAOC,WACrBX,KAAMO,IAAUG,OAAOC,WACvBV,OAAQM,IAAUG,OAAOC,WACzBT,SAAUK,IAAUG,OAAOC,cAE7BA,Y,YCtBW,SAASC,IACtB,OACE,oCACE,uCACA,kBAAC,EAAYC,GACb,uCACA,kBAACzC,EAAD,CAAYC,MAAM,gBAChB,kBAAC,EAAD,CAAarB,MAAO8D,KAEtB,uCACA,kBAAC,EAAD,CAAYxB,QAASA,IACrB,uCACA,kBAAC,EAAD,CAAoBS,MAAOgB,K,MClBjCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACN,EAAD,OAEFO,SAASC,eAAe,W","file":"static/js/main.f05eb2a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__2LgQK\",\"description\":\"profile_description__1xD3i\",\"avatar\":\"profile_avatar__10aNp\",\"name\":\"profile_name__2p3nP\",\"tag\":\"profile_tag__XV3re\",\"location\":\"profile_location__1o3HJ\",\"stats\":\"profile_stats__3-yEY\",\"statsItem\":\"profile_statsItem__22fYW\",\"label\":\"profile_label__1i70H\",\"quantity\":\"profile_quantity__1J5GS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistics_statistics__15IH0\",\"title\":\"statistics_title__1b5dy\",\"statList\":\"statistics_statList__2i2-L\",\"item\":\"statistics_item__2IuAA\",\"label\":\"statistics_label__tr00n\",\"percentage\":\"statistics_percentage__3gu8B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"friendList_friendList__SdbK_\",\"item\":\"friendList_item__2tmvE\",\"span\":\"friendList_span__2mJZy\",\"statusOnline\":\"friendList_statusOnline__31huQ friendList_span__2mJZy\",\"statusOffline\":\"friendList_statusOffline__3CdmY friendList_span__2mJZy\",\"avatar\":\"friendList_avatar__1fw3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__Y5Gzq\",\"head\":\"TransactionHistory_head__1ErRS\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../profile/profile.module.css';\r\n\r\nconst Stats = ({ stats }) => {\r\n  return (\r\n    <>\r\n      {Object.entries(stats).map(stat => (\r\n        <li key={stat[0]} className={styles.statsItem}>\r\n          <p className={styles.label}>{stat[0]}</p>\r\n          <p className={styles.quantity}>{stat[1]}</p>\r\n        </li>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n\r\nStats.propTypes = {\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './profile.module.css';\r\nimport Stats from '../profileStats/Stats';\r\n\r\nfunction Profile({ name, avatar, tag, location, stats }) {\r\n  return (\r\n    <div className={styles.profile}>\r\n      <div className={styles.description}>\r\n        <img src={avatar} alt=\"userAvatar\" className={styles.avatar} />\r\n        <p className={styles.name}>{name}</p>\r\n        <p className={styles.tag}>@{tag}</p>\r\n        <p className={styles.location}>{location}</p>\r\n      </div>\r\n      <ul className={styles.stats}>\r\n        <Stats stats={stats} />\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './statistics.module.css';\r\n\r\nexport default function Statistics({ title, children }) {\r\n  return (\r\n    <section className={styles.statistics}>\r\n      {title ? <h2 className={styles.title}>{title}</h2> : null}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nStatistics.defaultProps = {\r\n  title: 'not given prop',\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../statistics/statistics.module.css';\r\n\r\nfunction getRandomColor() {\r\n  var r = function () {\r\n    return Math.floor(Math.random() * 256);\r\n  };\r\n  return 'rgb(' + r() + ',' + r() + ',' + r() + ')';\r\n}\r\n\r\nconst StatsRender = ({ stats }) => {\r\n  return (\r\n    <ul className={styles.statList}>\r\n      {stats.map(stat => (\r\n        <li\r\n          key={stat.id}\r\n          className={styles.item}\r\n          style={{ backgroundColor: getRandomColor() }}\r\n        >\r\n          <span className={styles.label}>{stat.label}</span>\r\n          <span className={styles.percentage}>{stat.percentage}%</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default StatsRender;\r\n\r\nStatsRender.propTypes = {\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../friendList/friendList.module.css';\r\n\r\nconst FriendListItem = ({ friends }) => {\r\n  return (\r\n    <>\r\n      {friends.map(friend => (\r\n        <li key={friend.id} className={styles.item}>\r\n          <span\r\n            className={\r\n              friend.isOnline ? styles.statusOnline : styles.statusOffline\r\n            }\r\n          ></span>\r\n\r\n          <img\r\n            className={styles.avatar}\r\n            src={friend.avatar}\r\n            alt=\"friendAvatar\"\r\n            width=\"48\"\r\n          />\r\n          <p className={styles.name}>{friend.name}</p>\r\n        </li>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FriendListItem;\r\n\r\nFriendListItem.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './friendList.module.css';\r\nimport FriendListItem from '../friendListItem/FriendListItem';\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <ul className={styles.friendList}>\r\n      <FriendListItem friends={friends} />\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default FriendList;\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Transactions = ({ items }) => {\r\n  return (\r\n    <>\r\n      {items.map(item => (\r\n        <tr key={item.id}>\r\n          <td>{item.type}</td>\r\n          <td>{item.amount}</td>\r\n          <td>{item.currency}</td>\r\n        </tr>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Transactions;\r\n\r\nTransactions.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Transactions from '../transactions/Transactions';\r\nimport styles from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <table className={styles.transactionHistory}>\r\n      <thead className={styles.head}>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        <Transactions items={items} />\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default TransactionHistory;\r\n\r\nTransactions.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n","import React from 'react';\r\nimport Profile from './task1/profile/Profile';\r\nimport user from './task1/profile/user.json';\r\nimport Statistics from './task2/statistics/Statistics';\r\nimport StatsRender from './task2/statsRender/StatsRender';\r\nimport statisticalData from './task2/statistics/statistical-data.json';\r\nimport FriendList from './task3/friendList/FriendList';\r\nimport friends from './task3/friendList/friends.json';\r\nimport TransactionHistory from './task4/transactionHistory/TransactionHistory';\r\nimport transactions from './task4/transactionHistory/transactions.json';\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <h2>Task-01</h2>\r\n      <Profile {...user} />\r\n      <h2>Task-02</h2>\r\n      <Statistics title=\"Upload stats\">\r\n        <StatsRender stats={statisticalData} />\r\n      </Statistics>\r\n      <h2>Task-03</h2>\r\n      <FriendList friends={friends} />\r\n      <h2>Task-04</h2>\r\n      <TransactionHistory items={transactions} />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}